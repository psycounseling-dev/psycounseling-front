{"version":3,"sources":["assets/img/bg_action1.png","data/dam_data.js","components/Header/index.js","components/Header/Header.jsx","components/EventSlider/EventSlider.jsx","components/EventSlider/index.js","components/Jumbo/Jumbo.jsx","components/CardBlock/CardBlock.jsx","components/ActionContainer/ActionContainer.jsx","components/ActionContainer/index.js","components/sections/MainActivites/MainActivites.jsx","components/App/App.jsx","components/App/index.js","serviceWorker.js","index.js"],"names":["module","exports","dumdata","navbar","jumbo","title","text","buttons","id","label","href","events","name","date","Header","props","className","Navbar","expand","Toggle","aria-controls","Collapse","Nav","map","i","Link","key","EventSlider","useState","index","setIndex","Carousel","activeIndex","onSelect","selectedIndex","e","controls","Item","interval","defaultProps","Jumbo","Container","Row","md","Col","Jumbotron","Button","variant","CardBlock","header","bodybg","bodytext","footer","onClick","clickLabel","height","classes","style","class","background","backgroundImage","ActionContainer","bg_action1","MainActivites","list","li","idx","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.53e66752.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bg_action1.eca0422f.png\";","class Dummdata {\r\n    navbar=[\r\n        \"головна\",\r\n            \"про асоціацію\",\r\n            \"членство\",\r\n            \"кфлендар\",\r\n            \"новини\",\r\n            \"партнери\",\r\n            \"сертифікація\",\r\n            \"освіта\",\r\n            \"контакти\",\r\n    ]\r\n\r\n    jumbo={\r\n        title:\"Професійні стандартию Етика\",\r\n        text:\"Головною метою Асоціації є здійснення та захист прав і свобод, задоволення суспільних, соціальних, культурних та інших інтересів членів, зокрема об’єднання зусиль членів Організації задля сприяння розвитку травматерапії шляхом психологічного консультування та захисту суспільних інтересів.\",\r\n        buttons:[\r\n            {id:\"register\",label:\"Вступити до АПКТ\",href:\"/\"},\r\n            {id:\"paymant\",label: \"Оплата онлайн\", href:\"/\"}\r\n        ],\r\n        events:[\r\n            {name:\"Hellowin\", date:\"30.10.2020\", text:\"Placeholder Назва подіі\", href:\"/\"   },\r\n            {name:\"event2\", date:\"30.11.2020\", text:\"Placeholder Назва подіі\", href:\"/\"   },\r\n            {name:\"event3\", date:\"30.10.2020\", text:\"Placeholder Назва подіі\", href:\"/\"   },\r\n            {name:\"event4\", date:\"30.10.2020\", text:\"Placeholder Назва подіі\", href:\"/\"   },\r\n        ]\r\n\r\n        \r\n    }\r\n}\r\n\r\nconst dumdata = new Dummdata()\r\nexport default dumdata","import Header from './Header';\n\nexport default Header;\n","import React from \"react\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport dumdata from \"./../../data/dam_data\";\nimport \"./Header.scss\";\nconst Header = (props) => {\n  return (\n    <header className=\"top-header\">\n      <div className=\"container\">\n        <div className=\"top-header-titlerow\">\n          <div className=\"top-header-logo\">LOGO</div>\n          <div className=\"top-header-title\">\n            асоціація психологічного консультування та травмотерапії\n          </div>\n          <div className=\"top-header-langnav\">\n            <a href=\"\" className=\"active\">\n              UA\n            </a>\n            <a href=\"\">EN</a>\n          </div>\n        </div>\n      </div>\n      <div className=\"top-nav\">\n        <div className=\"container\">\n          <Navbar expand=\"lg\">\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n              <Nav className=\"mr-auto\">\n                {dumdata.navbar.map((i) => (\n                  <Nav.Link href=\"#home\" key={i}>\n                    {i}\n                  </Nav.Link>\n                ))}\n              </Nav>\n            </Navbar.Collapse>\n          </Navbar>\n        </div>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import React, { useState } from \"react\";\nimport Carousel from \"react-bootstrap/Carousel\";\nimport dumdata from \"./../../data/dam_data\";\nimport PropTypes from \"prop-types\";\nimport \"./Eventslider.styles.scss\";\n\nconst EventSlider = (props) => {\n  const [index, setIndex] = useState(0);\n\n  const handleSelect = (selectedIndex, e) => {\n    setIndex(selectedIndex);\n  };\n  return (\n    <div className=\"event-slider-wrapper\">\n      <Carousel activeIndex={index} onSelect={handleSelect} controls={false}>\n        {dumdata.jumbo.events.map((i) => (\n          <Carousel.Item key={i.name} interval={3000}>\n            <h3 className=\"title\">{i.name}</h3>\n            <p className=\"text\">{i.text}</p>\n            <p className=\"date\">{i.date}</p>\n          </Carousel.Item>\n        ))}\n      </Carousel>\n    </div>\n  );\n};\n\nEventSlider.propTypes = {\n  // bla: PropTypes.string,\n};\n\nEventSlider.defaultProps = {\n  // bla: 'test',\n};\n\nexport default EventSlider;\n","import EventSlider from './EventSlider';\n\nexport default EventSlider;\n","import React from \"react\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport Button from \"react-bootstrap/Button\";\nimport dumdata from \"./../../data/dam_data\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport PropTypes from \"prop-types\";\nimport \"./Jumbo.scss\";\nimport EventSlider from \"./../EventSlider\";\n\nconst Jumbo = (props) => (\n  <div className=\"jumbo-wrapper\">\n    <Container>\n      <Row md={4}>\n        <Col md={6} className=\"left-col\">\n          {\" \"}\n          <Jumbotron>\n            <h1>{dumdata.jumbo.title}</h1>\n            <p>{dumdata.jumbo.text}</p>\n            <p>\n              {dumdata.jumbo.buttons.map((i) => (\n                <Button key={i.id} variant=\"outline-info\">\n                  {i.label}\n                </Button>\n              ))}\n            </p>\n          </Jumbotron>\n        </Col>\n\n        <Col md={6}>\n          <EventSlider />\n        </Col>\n      </Row>\n    </Container>\n  </div>\n);\n\nJumbo.propTypes = {\n  // bla: PropTypes.string,\n};\n\nJumbo.defaultProps = {\n  // bla: 'test',\n};\n\nexport default Jumbo;\n","import React from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport PropTypes from \"prop-types\";\nimport \"./CardBlock.scss\";\n\nconst CardBlock = ({\n  header,\n  bodybg,\n  bodytext,\n  footer,\n  onClick,\n  clickLabel,\n  height,\n}) => {\n  const classes = `card-block-wrapper ${bodybg ? \"with-bg\" : \"\"}`;\n  return (\n    <div className={classes} style={{ height: height }}>\n      <div class=\"card text-center\" style={bodybg && { background: \"none\" }}>\n        {bodybg && (\n          <div\n            className=\"card-body-bg\"\n            style={{ backgroundImage: `url(${bodybg})` }}\n          ></div>\n        )}\n        {header && <div class=\"card-header\">{header}</div>}\n        <div class=\"card-body\">\n          {bodytext && <p>{bodytext}</p>}\n          {onClick && (\n            <Button\n              className=\"crack-bootstrap no-border-rad\"\n              variant=\"info\"\n              onClick={onClick}\n            >\n              {clickLabel}\n            </Button>\n          )}\n        </div>\n        {footer && <div class=\"card-footer text-muted\">{footer}</div>}\n      </div>\n    </div>\n  );\n};\n\nCardBlock.propTypes = {\n  // bla: PropTypes.string,\n};\n\nCardBlock.defaultProps = {\n  // bla: 'test',\n};\n\nexport default CardBlock;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport CardBlock from \"../CardBlock/CardBlock\";\nimport bg_action1 from \"./../../assets/img/bg_action1.png\";\nimport \"./ActionContainer.scss\";\n\nconst ActionContainer = (props) => (\n  <section className=\"section-block action-container py-5\">\n    <div className=\"action-container-wrapper\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-4 col-sm-12\">\n            <CardBlock\n              height={400}\n              header={null}\n              bodybg={bg_action1}\n              bodytext={\"body text is fany\"}\n              footer={null}\n              clickLabel={\"More info\"}\n              onClick={() => {}}\n            ></CardBlock>\n          </div>\n          <div className=\"col-md-4 col-sm-12\">\n            <CardBlock\n              height={400}\n              header={null}\n              bodybg={bg_action1}\n              bodytext={\"body text is fany\"}\n              footer={null}\n              clickLabel={\"More info\"}\n              onClick={() => {}}\n            ></CardBlock>\n          </div>\n          <div className=\"col-md-4 col-sm-12\">\n            <CardBlock\n              height={400}\n              header={null}\n              bodybg={bg_action1}\n              bodytext={\"body text is fany\"}\n              footer={null}\n              clickLabel={\"More info\"}\n              onClick={() => {}}\n            ></CardBlock>\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>\n);\n\nActionContainer.propTypes = {\n  // bla: PropTypes.string,\n};\n\nActionContainer.defaultProps = {\n  // bla: 'test',\n};\n\nexport default ActionContainer;\n","import ActionContainer from './ActionContainer';\n\nexport default ActionContainer;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./MainActivites.scss\";\n\nconst MainActivites = ({ list, title }) => (\n  <section className=\"section-block main-activites\">\n    <div className=\"container\">\n      <div className=\"activites-list\">\n        <div className=\"list-title\">{title && title}</div>\n        <ul>{list && list.map((li, idx) => <li key={idx}>{li}</li>)}</ul>\n      </div>\n    </div>\n  </section>\n);\n\nMainActivites.propTypes = {\n  // bla: PropTypes.string,\n};\n\nMainActivites.defaultProps = {\n  // bla: 'test',\n};\n\nexport default MainActivites;\n","import React from \"react\";\nimport Header from \"../Header\";\nimport Jumbo from \"../Jumbo/Jumbo\";\nimport ActionContainer from \"./../ActionContainer\";\nimport \"./App.css\";\nimport \"./../../assets/styles/index.scss\";\nimport MainActivites from \"../sections/MainActivites/MainActivites\";\n\nconst list = [\n  \"Прийняття участі у розробці законопроектів, стандартів і вимог, що стосуються психологічного консультування та травматерапії\",\n  \"впровадження етичних стандартів клінічної практики\",\n  \"організація навчання, проведення курсів, семінарів, зустрічей, лекцій та інших освітніх програм в Україні відповідно до міжнародних стандартів\",\n  \"сприяння підвищенню професійного рівня спеціалістів в області психологчного консультування та травматерапії у відповідності до міжнародних стандартів\",\n\n  \"впровадження нових методів психології у сфері психологічного консультування та травматерапії\",\n  \"сприяння інформаційному забезпеченню психологів, обміну досвідом дослідницької і практичної діяльності, освоєння прогресивних форм роботи\",\n  \"впровадження та підтримка дослідницьких проектів з питань психологічного консультування та травматерапії\",\n  \"розробка й реалізація проектів і програм, що передбачають надання правової, соціальної та гуманітарної допомоги громадянам України, громадянам інших держав та особам без громадянства\",\n  \"розвиток культури звернення за психологічною допомогою\",\n];\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Jumbo />\n      <main>\n        <ActionContainer />\n        <MainActivites list={list} title={\"Основні напрями діяльності Асоціації\"}/>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import App from \"./App.jsx\"\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}